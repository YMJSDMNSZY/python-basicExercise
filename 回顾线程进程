1.创建线程
A.
t = Thread(target=func, name='' , args=O , kwargs=0)新建状态
t.start(---->就绪状态
run()
join()
B.
自定义线程
class MyThread(Thread):
    def_init__(self, name):
        __init__(
        self.name=name
    def run(self):
        任务
    t = MyThread(' name’)
    t.start()
p = MyProcess()
p. start()


进程数据共享;

进程共享数据与线程共享数据区别:进程是每个进程中都有一份
线程是共同一个数据―--->数据安全性问题
GTL------>伪线程
lock = Lock()
lock.acquire()
....
lock.release()
―――--〉只要用锁:死锁
避免死锁
3.线程间通信:生产者与消费者
生产者:线程
消费者;线程
import queue
q=Queue()


n=0
进程池:Pool
p= Pool(5)
阻塞式
apply(func,args, kwargs)
非阻塞式
apply_async()
